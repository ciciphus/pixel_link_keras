node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "evaluation_360x640/net/input_images"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "evaluation_360x640/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/ToFloat"
  op: "Cast"
  input: "evaluation_360x640/net/input_images"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\366B\000\000\352B\000\000\320B"
      }
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/sub"
  op: "Sub"
  input: "evaluation_360x640/ssd_preprocessing_train/ToFloat"
  input: "evaluation_360x640/ssd_preprocessing_train/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/Shape"
  op: "Shape"
  input: "evaluation_360x640/ssd_preprocessing_train/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/unstack"
  op: "Unpack"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/ExpandDims"
  op: "ExpandDims"
  input: "evaluation_360x640/ssd_preprocessing_train/sub"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "h\001\000\000\200\002\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/ResizeBilinear"
  op: "ResizeBilinear"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/ExpandDims"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "h\001\000\000\200\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/ssd_preprocessing_train/resize_image/Reshape"
  op: "Reshape"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/ResizeBilinear"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "evaluation_360x640/ExpandDims"
  op: "ExpandDims"
  input: "evaluation_360x640/ssd_preprocessing_train/resize_image/Reshape"
  input: "evaluation_360x640/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1873171627521515
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1873171627521515
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/weights"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/read"
  op: "Identity"
  input: "MobileNet/conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/biases"
  input: "MobileNet/conv_1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/read"
  op: "Identity"
  input: "MobileNet/conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_1/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/ExpandDims"
  input: "MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_1/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_1/convolution"
  input: "MobileNet/conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "MobileNet/conv_1/batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/gamma"
  input: "MobileNet/conv_1/batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "MobileNet/conv_1/batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "MobileNet/conv_1/batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_1/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_1/BiasAdd"
  input: "MobileNet/conv_1/batch_norm/gamma/read"
  input: "MobileNet/conv_1/batch_norm/beta/read"
  input: "MobileNet/conv_1/batch_norm/moving_mean/read"
  input: "MobileNet/conv_1/batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_1/batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_1/batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1980295032262802
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1980295032262802
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_1/batch_norm/Relu"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_2/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_2/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_2/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_2/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_2/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_2/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_2/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_2/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_2/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_2/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_2/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_2/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_2/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_3/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_3/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_3/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_3/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_3/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_3/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_3/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_3/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_3/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_3/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_3/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_3/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_3/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_4/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_4/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_4/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_4/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_4/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_4/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_4/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_4/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_4/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_4/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_4/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_4/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_4/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_5/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_5/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_5/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_5/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_5/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_5/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_5/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_5/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_5/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_6/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_6/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_6/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_6/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_6/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_6/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_6/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_6/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_6/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_6/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_6/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_6/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_6/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_7/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_7/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_7/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_7/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_7/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_7/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_7/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_7/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_7/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_7/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_7/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_7/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_7/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_8/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_8/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_8/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_8/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_8/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_8/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_8/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_8/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_8/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_13/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_13/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_13/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_13/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_13/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_13/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_13/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_13/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_13/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_13/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_13/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_13/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "evaluation_360x640/MobileNet/conv_ds_13/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_14/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_14/dw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_14/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_14/dw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/dw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_14/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/gamma/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_14/pw_batch_norm/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/gamma/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_14/pw_batch_norm/gamma/read"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/read"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/conv_ds_14/pw_batch_norm/Relu"
  op: "Relu"
  input: "evaluation_360x640/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/avg_pool_15/AvgPool"
  op: "AvgPool"
  input: "evaluation_360x640/MobileNet/conv_ds_14/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 7
        i: 7
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/SpatialSqueeze"
  op: "Squeeze"
  input: "evaluation_360x640/MobileNet/avg_pool_15/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0629940778017044
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0629940778017044
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/max"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/mul"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Assign"
  op: "Assign"
  input: "MobileNet/fc_16/weights"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/read"
  op: "Identity"
  input: "MobileNet/fc_16/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Assign"
  op: "Assign"
  input: "MobileNet/fc_16/biases"
  input: "MobileNet/fc_16/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/read"
  op: "Identity"
  input: "MobileNet/fc_16/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose"
  op: "Transpose"
  input: "evaluation_360x640/MobileNet/SpatialSqueeze"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\025\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape"
  op: "Reshape"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose_1"
  op: "Transpose"
  input: "MobileNet/fc_16/weights/read"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape_1"
  op: "Reshape"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/transpose_1"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/MatMul"
  op: "MatMul"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\007\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/Tensordot"
  op: "Reshape"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/MatMul"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/fc_16/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/MobileNet/fc_16/Tensordot"
  input: "MobileNet/fc_16/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/Predictions/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\350\003\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/Predictions/Reshape"
  op: "Reshape"
  input: "evaluation_360x640/MobileNet/fc_16/BiasAdd"
  input: "evaluation_360x640/MobileNet/Predictions/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/Predictions/Softmax"
  op: "Softmax"
  input: "evaluation_360x640/MobileNet/Predictions/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/Predictions/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\007\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/MobileNet/Predictions/Reshape_1"
  op: "Reshape"
  input: "evaluation_360x640/MobileNet/Predictions/Softmax"
  input: "evaluation_360x640/MobileNet/Predictions/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10804235935211182
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10804235935211182
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15249857306480408
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15249857306480408
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\027\000\000\000(\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice"
  op: "StridedSlice"
  input: "evaluation_360x640/pixel_cls/Shape"
  input: "evaluation_360x640/pixel_cls/strided_slice/stack"
  input: "evaluation_360x640/pixel_cls/strided_slice/stack_1"
  input: "evaluation_360x640/pixel_cls/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/ResizeBilinear"
  op: "ResizeBilinear"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "evaluation_360x640/pixel_cls/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/add"
  op: "Add"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "evaluation_360x640/pixel_cls/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21483446657657623
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21483446657657623
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000-\000\000\000P\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_1"
  op: "StridedSlice"
  input: "evaluation_360x640/pixel_cls/Shape_1"
  input: "evaluation_360x640/pixel_cls/strided_slice_1/stack"
  input: "evaluation_360x640/pixel_cls/strided_slice_1/stack_1"
  input: "evaluation_360x640/pixel_cls/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/ResizeBilinear_1"
  op: "ResizeBilinear"
  input: "evaluation_360x640/pixel_cls/add"
  input: "evaluation_360x640/pixel_cls/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/add_1"
  op: "Add"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "evaluation_360x640/pixel_cls/ResizeBilinear_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5773502588272095
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5773502588272095
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_1/BiasAdd"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/convolution"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\264\000\000\000@\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/strided_slice_2"
  op: "StridedSlice"
  input: "evaluation_360x640/pixel_cls/Shape_2"
  input: "evaluation_360x640/pixel_cls/strided_slice_2/stack"
  input: "evaluation_360x640/pixel_cls/strided_slice_2/stack_1"
  input: "evaluation_360x640/pixel_cls/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/ResizeBilinear_2"
  op: "ResizeBilinear"
  input: "evaluation_360x640/pixel_cls/add_1"
  input: "evaluation_360x640/pixel_cls/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/pixel_cls/add_2"
  op: "Add"
  input: "evaluation_360x640/pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/BiasAdd"
  input: "evaluation_360x640/pixel_cls/ResizeBilinear_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10660035908222198
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10660035908222198
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/convolution"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14852213859558105
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14852213859558105
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/convolution"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\027\000\000\000(\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice"
  op: "StridedSlice"
  input: "evaluation_360x640/pixel_link/Shape"
  input: "evaluation_360x640/pixel_link/strided_slice/stack"
  input: "evaluation_360x640/pixel_link/strided_slice/stack_1"
  input: "evaluation_360x640/pixel_link/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/ResizeBilinear"
  op: "ResizeBilinear"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "evaluation_360x640/pixel_link/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/add"
  op: "Add"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "evaluation_360x640/pixel_link/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20412415266036987
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/convolution"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000-\000\000\000P\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_1"
  op: "StridedSlice"
  input: "evaluation_360x640/pixel_link/Shape_1"
  input: "evaluation_360x640/pixel_link/strided_slice_1/stack"
  input: "evaluation_360x640/pixel_link/strided_slice_1/stack_1"
  input: "evaluation_360x640/pixel_link/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/ResizeBilinear_1"
  op: "ResizeBilinear"
  input: "evaluation_360x640/pixel_link/add"
  input: "evaluation_360x640/pixel_link/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/add_1"
  op: "Add"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "evaluation_360x640/pixel_link/ResizeBilinear_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4330126941204071
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4330126941204071
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/convolution"
  op: "Conv2D"
  input: "evaluation_360x640/MobileNet/conv_1/BiasAdd"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/BiasAdd"
  op: "BiasAdd"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/convolution"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\264\000\000\000@\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/strided_slice_2"
  op: "StridedSlice"
  input: "evaluation_360x640/pixel_link/Shape_2"
  input: "evaluation_360x640/pixel_link/strided_slice_2/stack"
  input: "evaluation_360x640/pixel_link/strided_slice_2/stack_1"
  input: "evaluation_360x640/pixel_link/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/ResizeBilinear_2"
  op: "ResizeBilinear"
  input: "evaluation_360x640/pixel_link/add_1"
  input: "evaluation_360x640/pixel_link/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "evaluation_360x640/pixel_link/add_2"
  op: "Add"
  input: "evaluation_360x640/pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/BiasAdd"
  input: "evaluation_360x640/pixel_link/ResizeBilinear_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evaluation_360x640/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\264\000\000\000@\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "evaluation_360x640/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\264\000\000\000@\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/Sub"
  op: "Sub"
  input: "evaluation_360x640/Rank"
  input: "evaluation_360x640/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Slice/begin"
  op: "Pack"
  input: "evaluation_360x640/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/Slice"
  op: "Slice"
  input: "evaluation_360x640/Shape_1"
  input: "evaluation_360x640/Slice/begin"
  input: "evaluation_360x640/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "evaluation_360x640/concat"
  op: "ConcatV2"
  input: "evaluation_360x640/concat/values_0"
  input: "evaluation_360x640/Slice"
  input: "evaluation_360x640/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Reshape"
  op: "Reshape"
  input: "evaluation_360x640/pixel_cls/add_2"
  input: "evaluation_360x640/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Softmax"
  op: "Softmax"
  input: "evaluation_360x640/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_1"
  op: "Reshape"
  input: "evaluation_360x640/Softmax"
  input: "evaluation_360x640/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_2"
  op: "Reshape"
  input: "evaluation_360x640/pixel_cls/add_2"
  input: "evaluation_360x640/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_3"
  op: "Reshape"
  input: "evaluation_360x640/Reshape_1"
  input: "evaluation_360x640/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\264\000\000\000@\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice"
  op: "StridedSlice"
  input: "evaluation_360x640/Shape_2"
  input: "evaluation_360x640/strided_slice/stack"
  input: "evaluation_360x640/strided_slice/stack_1"
  input: "evaluation_360x640/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_1"
  op: "StridedSlice"
  input: "evaluation_360x640/Shape_2"
  input: "evaluation_360x640/strided_slice_1/stack"
  input: "evaluation_360x640/strided_slice_1/stack_1"
  input: "evaluation_360x640/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_2"
  op: "StridedSlice"
  input: "evaluation_360x640/Shape_2"
  input: "evaluation_360x640/strided_slice_2/stack"
  input: "evaluation_360x640/strided_slice_2/stack_1"
  input: "evaluation_360x640/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_4/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_4/shape/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_4/shape"
  op: "Pack"
  input: "evaluation_360x640/strided_slice"
  input: "evaluation_360x640/strided_slice_1"
  input: "evaluation_360x640/strided_slice_2"
  input: "evaluation_360x640/Reshape_4/shape/3"
  input: "evaluation_360x640/Reshape_4/shape/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_4"
  op: "Reshape"
  input: "evaluation_360x640/pixel_link/add_2"
  input: "evaluation_360x640/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Shape_3"
  op: "Shape"
  input: "evaluation_360x640/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "evaluation_360x640/Shape_4"
  op: "Shape"
  input: "evaluation_360x640/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/Sub_1"
  op: "Sub"
  input: "evaluation_360x640/Rank_1"
  input: "evaluation_360x640/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Slice_1/begin"
  op: "Pack"
  input: "evaluation_360x640/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "evaluation_360x640/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "evaluation_360x640/Slice_1"
  op: "Slice"
  input: "evaluation_360x640/Shape_4"
  input: "evaluation_360x640/Slice_1/begin"
  input: "evaluation_360x640/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "evaluation_360x640/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "evaluation_360x640/concat_1"
  op: "ConcatV2"
  input: "evaluation_360x640/concat_1/values_0"
  input: "evaluation_360x640/Slice_1"
  input: "evaluation_360x640/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_5"
  op: "Reshape"
  input: "evaluation_360x640/Reshape_4"
  input: "evaluation_360x640/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/Softmax_1"
  op: "Softmax"
  input: "evaluation_360x640/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evaluation_360x640/Reshape_6"
  op: "Reshape"
  input: "evaluation_360x640/Softmax_1"
  input: "evaluation_360x640/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_3"
  op: "StridedSlice"
  input: "evaluation_360x640/Reshape_1"
  input: "evaluation_360x640/strided_slice_3/stack"
  input: "evaluation_360x640/strided_slice_3/stack_1"
  input: "evaluation_360x640/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "evaluation_360x640/strided_slice_4"
  op: "StridedSlice"
  input: "evaluation_360x640/Reshape_6"
  input: "evaluation_360x640/strided_slice_4/stack"
  input: "evaluation_360x640/strided_slice_4/stack_1"
  input: "evaluation_360x640/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 16
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 133
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/beta"
        string_val: "MobileNet/conv_1/batch_norm/gamma"
        string_val: "MobileNet/conv_1/batch_norm/moving_mean"
        string_val: "MobileNet/conv_1/batch_norm/moving_variance"
        string_val: "MobileNet/conv_1/biases"
        string_val: "MobileNet/conv_1/weights"
        string_val: "MobileNet/conv_ds_13/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_13/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_13/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_14/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_14/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_14/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_2/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_2/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_2/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_3/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_3/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_3/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_4/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_4/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_4/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_5/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_5/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_5/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_6/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_6/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_6/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_7/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_7/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_7/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_8/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_8/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_8/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
        string_val: "MobileNet/fc_16/biases"
        string_val: "MobileNet/fc_16/weights"
        string_val: "global_step"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 133
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "MobileNet/conv_1/batch_norm/gamma"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "MobileNet/conv_1/biases"
  input: "MobileNet/conv_1/weights"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "MobileNet/fc_16/biases"
  input: "MobileNet/fc_16/weights"
  input: "global_step"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/gamma"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "MobileNet/conv_1/biases"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "MobileNet/conv_1/weights"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/gamma"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/gamma"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/gamma"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/gamma"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/gamma"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/gamma"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/gamma"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/gamma"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/gamma"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/gamma"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/gamma"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/gamma"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/gamma"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/gamma"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/gamma"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/gamma"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/gamma"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/gamma"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/fc_16/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "MobileNet/fc_16/biases"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "MobileNet/fc_16/weights"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "save/RestoreV2_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "save/RestoreV2_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^MobileNet/conv_1/weights/Assign"
  input: "^MobileNet/conv_1/biases/Assign"
  input: "^MobileNet/conv_1/batch_norm/beta/Assign"
  input: "^MobileNet/conv_1/batch_norm/gamma/Assign"
  input: "^MobileNet/conv_1/batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_1/batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_2/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_2/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_2/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_3/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_3/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_3/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_4/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_4/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_4/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_5/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_6/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_6/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_6/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_7/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_7/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_7/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_8/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_13/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_13/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_13/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_14/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/gamma/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/fc_16/weights/Assign"
  input: "^MobileNet/fc_16/biases/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/weights/Assign"
  input: "^pixel_cls/score_from_evaluation_360x640/MobileNet/conv_1/biases/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/weights/Assign"
  input: "^pixel_link/score_from_evaluation_360x640/MobileNet/conv_1/biases/Assign"
}
versions {
  producer: 21
}
